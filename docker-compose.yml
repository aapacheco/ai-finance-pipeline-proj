# docker-compose.yml
version: '3.8'

services:

  # 1. Database Service (PostgreSQL)
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sentiment_db
    # This mounts your schema file to initialize the database structure
    volumes:
      - ./init_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 2. Message Queue Service (Using RabbitMQ as an example)
  # Kafka is also a good option, but RabbitMQ is simpler for initial setup.
  queue:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672" # Standard AMQP port
      - "15672:15672" # Management UI port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3. NLP Inference Service (Python/FastAPI)
  inference-service:
    build:
      context: ./inference-service
      dockerfile: Dockerfile
    # Wait until the database and queue are running before starting
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy
    environment:
      QUEUE_HOST: queue
      DB_HOST: db

  # 4. Ingestion Service (Python/FastAPI)
  ingestion-service:
    build:
      context: ./ingestion-service
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy
    environment:
      QUEUE_HOST: queue
      DB_HOST: db
    # You might expose a port for testing ingestion triggers
    # ports: ["8000:8000"]

  # 5. Data Aggregator Service (Go)
  aggregator-service:
    build:
      context: ./aggregator-service
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy
    environment:
      QUEUE_HOST: queue
      DB_HOST: db